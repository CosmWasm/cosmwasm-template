# This CI configuration tests the cosmwasm-template repository itself,
# not the resulting project. We want to ensure that
# 1. the template to project generation works
# 2. the template files are up to date
#
# We chose Appveyor for this task as it allows us to use an arbitrary config
# location. Furthermore it allows us to ship a Circle CI and Travis config
# generated for the resulting project.

image: Ubuntu

environment:
  matrix:
    - TOOLCHAIN: stable
# Deactivated for now
#    - TOOLCHAIN: nightly

cache:
  - '~/.rustup'
  - '~/.cargo'

install:
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain $TOOLCHAIN -y
  - source $HOME/.cargo/env
  - rustc --version
  - cargo --version
  - rustup target add wasm32-unknown-unknown
  - cargo install cargo-generate --features vendored-openssl

build_script:
  # No matter what is currently checked out by the CI (master, other branch, PR merge commit),
  # we create a temporary local branch from that point with a constant name, which we need for
  # cargo generate.
  - git branch current-ci-checkout
  - cd ..
  - cargo generate --git cosmwasm-template --name test-generation-in-ci --branch current-ci-checkout
  - cd test-generation-in-ci
  - dir
  - cargo unit-test
  - cargo wasm
  - cargo integration-test
#  - cargo integration-test --no-default-features --features singlepass
  - cargo schema

# whitelist long living branches
branches:
  only:
    - master
